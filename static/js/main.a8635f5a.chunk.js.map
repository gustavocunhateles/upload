{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["dir","array","FormData","x","length","append","originalname","options","value","label","App","props","checkMimeType","event","files","target","err","types","every","type","z","toast","error","maxSelectFile","warn","checkFileSize","size","onChangeHandler","setState","selectedFile","loaded","handleChange","selectedOption","upload","data","state","axios","post","onUploadProgress","ProgressEvent","total","then","res","success","catch","listarIps","strings","ipformat","l","listaIps","test","read","matriculaFormat","comentFormat","listaComent","listaMatriculas","countIps","countMatriculas","countComent","i","y","this","class","multiple","onChange","max","color","Math","round","onClick","placeholder","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a8635f5a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Progress} from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Select from 'react-select'\n\nconst dir = \"./upload\";\nconst array = new FormData() \n\nfor(var x = 0; x<dir.length; x++) {\n  array.append(null, dir[x].originalname)\n}\n\nconst options = [\n  { value: 'arquivo1', label: 'arquivo1' },\n  { value: 'arquivo2', label: 'arquivo2' },\n  { value: 'arquivo3', label: 'arquivo3' },\n];\n\nclass App extends Component {\n  \n  constructor(props) {\n    super(props);\n      this.state = {\n        selectedFile: null,\n        selectedOption: null,\n        loaded:0\n      }\n  }\n\n  checkMimeType=(event)=>{\n    let files = event.target.files \n    let err = []\n    const types = ['application/pdf', 'text/plain', 'text/html']\n    for(var x = 0; x<files.length; x++) {\n         if (types.every(type => files[x].type !== type)) {\n         err[x] = 'O sistema não analisa arquivos do tipo ' + files[x].type;\n       }\n     };\n     for(var z = 0; z<err.length; z++) {\n        toast.error(err[z])\n        event.target.value = null\n    }\n   return true;\n  }\n  \n  maxSelectFile=(event)=>{\n      let files = event.target.files\n          if (files.length > 3) { \n            const msg = 'Selecione apenas 3 arquivos!'\n            event.target.value = null\n            toast.warn(msg)\n            return false;\n        }\n      return true;\n  }\n\n  checkFileSize=(event)=>{\n    let files = event.target.files\n    let size = 99999999999999 \n    let err = []; \n    for(var x = 0; x<files.length; x++) {\n      if (files[x].size > size) {\n        err[x] = files[x].type+' é muito grande, escolha um menor!\\n';\n      }\n    };\n    for(var z = 0; z<err.length; z++) {\n      // discard selected file\n      toast.error(err[z])\n      event.target.value = null\n    }\n    return true;\n  }\n\n  onChangeHandler=event=>{\n    var files = event.target.files\n    if(this.maxSelectFile(event) && this.checkMimeType(event) && this.checkFileSize(event)){ \n    // if return true allow to setState\n      this.setState({\n      selectedFile: files,\n      loaded:0\n      })\n    }\n  }\n\n  handleChange=event=>{\n    var options = event.target\n    this.setState({\n      selectedOption: options,\n      loaded:0\n    })\n    \n  } \n  \n  upload = () => {\n    \n    const data = new FormData() \n\n    if(this.state.selectedFile === null){\n      toast.error('Selecione o arquivo!')\n    }\n    \n    else{\n      \n      for(var x = 0; x<this.state.selectedFile.length; x++) {\n        data.append('file', this.state.selectedFile[x])\n      }\n      axios.post(\"http://localhost:8000/upload\", data, {\n        onUploadProgress: ProgressEvent => {\n          this.setState({\n            loaded: (ProgressEvent.loaded / ProgressEvent.total*100),\n          })\n        },\n      })\n      .then(res => { \n        toast.success('Upload realizado com sucesso!')\n      })\n      .catch(err => { \n        toast.error('Falha no upload! ' + err)\n      })\n    }\n\n  }\n\n  listarIps = (strings) => {\n    \n    //const strings = null\n    var ipformat = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    var l = strings.length\n    var listaIps = ['']\n    \n    for(var x = 0; x<l; x++) {\n      \n      if( strings[x] === strings[l-1] && ipformat.test(strings[x]) ){\n        listaIps = listaIps + strings[x]\n      }\n      else if( strings[x] === strings[l-2] && ipformat.test(strings[x]) ){\n        listaIps = listaIps + strings[x] + ' e '\n      }\n      else if ( ipformat.test(strings[x]) ){\n        listaIps = listaIps + strings[x] + ', '\n      }\n      \n    }\n    \n    return listaIps;\n  }\n\n  read = () => {\n\n    const data = new FormData() \n    //const strings = null\n    const strings = ['192.168.1.1', 'hostname', '192.168.1.3', '192.168.1.4', '1.1', 'ipteste', '999.999.999.999',\n                    'C1234567', 'C1234567-8', 'E3877678', 'E3877678-2', 'F3877678', 'F3877678-2', 'Z1234567', 'Z1234567-8',\n                    '<!-- Comentário em html -->', '<!-- Não é comentário em html --', '// Comentário em Java', '/* Comentário em Java */', '/ Não é um comentário em Java']\n    var ipformat = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    var matriculaFormat = /^([c|C][0-9]{7}|[c|C][0-9]{7}[-][0-9]|[e|E][0-9]{7}|[e|E][0-9]{7}[-][0-9]|[f|F][0-9]{7}|[f|F][0-9]{7}[-][0-9]|[z|Z][0-9]{7}|[z|Z][0-9]{7}[-][0-9])$/; \n    var comentFormat = /^([<][!][-][-].*.[-][-][>]|[/][/].*$|[/][*].*$)$/;\n    var l = strings.length\n    var listaIps = ['']\n    var listaComent = ['']\n    var listaMatriculas = ['']\n    var countIps = 0;\n    var countMatriculas = 0;\n    var countComent = 0;\n\n    for(var i = 0; i<l; i++) {\n      if ( ipformat.test(strings[i]) ){\n        countIps++;\n      }\n    }\n\n    for(var i = 0; i<l; i++) {\n\n      if ( ipformat.test(strings[i]) ){\n        if( i === countIps ){\n          listaIps += strings[i]  \n        }\n        else if( i === countIps-1 ){\n          listaIps += strings[i]  + ' e '\n        }\n        else{\n          listaIps += strings[i] + ', '\n        }\n      }\n    }\n\n    for(var x = 0; x<l; x++) {    \n      if ( matriculaFormat.test(strings[x]) ){\n        countMatriculas++;\n      }\n    }\n\n    for(var x = 0; x<l; x++) {\n\n      if ( matriculaFormat.test(strings[x]) ){        \n        if( x === countMatriculas ){\n          listaMatriculas += strings[x]  \n        }\n        else if( x === countMatriculas-1 ){\n          listaMatriculas += strings[x]  + ' e '\n        }\n        else{\n          listaMatriculas += strings[x] + ', '\n        }     \n      }\n    }\n\n    for(var y = 0; y<l; y++) {\n      if ( comentFormat.test(strings[y]) ){\n        countComent++;\n      }\n    }\n\n    for(var y = 0; y<l; y++) {\n\n      if ( comentFormat.test(strings[y]) ){        \n        if( y === countComent ){\n          listaComent += strings[y]\n        }\n        else if( y === countComent-1 ){\n          listaComent += strings[y]  + ' e '\n        }\n        else{\n          listaComent += strings[y] + ', '\n        }\n      }\n    }\n\n    if(this.state.selectedOption === null){\n      toast.error('Selecione o arquivo!')\n    }\n    \n    else{     \n      axios.post(\"http://localhost:8000/read\", data)\n      .then(res => { \n        if(listaIps){\n          toast.success('Análise realizada com sucesso! ' \n          + countIps +' Ips identificados: ' + listaIps + '. '\n          + countMatriculas + ' Matrículas identificadas: ' + listaMatriculas + '. '\n          + countComent + ' Comentários identificados: ' + listaComent + '.')\n        }\n        else{\n          toast.success('Análise realizada com sucesso! Não há Ips!')\n        }\n      })\n      .catch(err => { \n        toast.error('Falha na análise! ' + err)\n      })\n    }\n  }\n\n  render() {\n\n    const { selectedOption } = this.state;\n\n    return (\n      <div class=\"container\">\n\t      <div class=\"row\">\n          \n          <div class=\"offset-md-2 col-md-8\">\n            <br></br> <br></br> <br></br> \n          </div>\n\n      \t  <div class=\"offset-md-2 col-md-8\">\n            \n            <div class=\"form-group files\">\n              <center> <h2> Upload de Arquivos </h2> </center>\n              <input type=\"file\" class=\"form-control\" multiple onChange={this.onChangeHandler}/>\n            </div>  \n            \n            <div class=\"form-group\">\n              <ToastContainer />\n              <Progress max=\"100\" color=\"success\" value={this.state.loaded} >{Math.round(this.state.loaded,2) }%</Progress>      \n            </div> \n              \n            <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.upload}>Upload</button>\n\n\t        </div>\n          \n          <div class=\"offset-md-2 col-md-8\">\n            <br></br> <br></br> <hr></hr> <br></br> \n          </div>\n          \n          <div class=\"offset-md-2 col-md-8\">\n            \n            <div>\n              <center> <h2> Analisador de Arquivos </h2> </center>\n              <Select\n                value={selectedOption}\n                onChange={this.handleChange}\n                options={options} \n                placeholder={\"\"}              \n              />\n            </div>  \n            <br></br>\n            <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.read}>Analisar</button>\n\n\t        </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}